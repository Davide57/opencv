Index: opencv-1.0.0/otherlibs/highgui/cvcap_ffmpeg.cpp
===================================================================
--- opencv-1.0.0.orig/otherlibs/highgui/cvcap_ffmpeg.cpp	2009-11-13 16:00:46.000000000 +0100
+++ opencv-1.0.0/otherlibs/highgui/cvcap_ffmpeg.cpp	2009-11-13 16:13:24.000000000 +0100
@@ -43,7 +43,9 @@
 
 
 extern "C" {
-#include <ffmpeg/avformat.h>
+#include <libavformat/avformat.h>
+#include <libavcodec/avcodec.h>
+#include <libswscale/swscale.h>
 }
 
 #ifdef NDEBUG
@@ -62,6 +64,7 @@
     AVFrame           * picture;
     int64_t             picture_pts;
     AVFrame             rgb_picture;
+    SwsContext        * sws_context;
 
     IplImage            frame;
 } CvCaptureAVI_FFMPEG;
@@ -89,6 +92,12 @@
         capture->ic = NULL;
     }
 
+    if ( capture->sws_context )
+    {
+        sws_freeContext( capture->sws_context );
+        capture->sws_context = NULL;
+    }
+
     if( capture->rgb_picture.data[0] )
         cvFree( &capture->rgb_picture.data[0] );
 
@@ -104,6 +113,7 @@
     capture->ic = NULL;
     capture->video_stream = -1;
     capture->video_st = NULL;
+    capture->sws_context = NULL;
     /* register all codecs, demux and protocols */
     av_register_all();
 
@@ -145,6 +155,16 @@
                                    enc->height ), 8, 3, 0, 4 );
         cvSetData( &capture->frame, capture->rgb_picture.data[0],
                            capture->rgb_picture.linesize[0] );
+        capture->sws_context = sws_getContext(enc->width,
+				     enc->height,
+				     enc->pix_fmt,
+				     enc->width,
+				     enc->height,
+				     PIX_FMT_BGR24,
+				     SWS_BICUBIC,
+				     NULL, NULL, NULL);
+        if (!capture->sws_context)
+	  goto exit_func;
         break;
     }
     }
@@ -212,21 +232,12 @@
 
 static const IplImage* icvRetrieveFrameAVI_FFMPEG( CvCaptureAVI_FFMPEG* capture )
 {
-    if( !capture || !capture->video_st || !capture->picture->data[0] )
+    if( !capture || !capture->video_st || !capture->picture->data[0] || !capture->sws_context )
     return 0;
-#if LIBAVFORMAT_BUILD > 4628
-    img_convert( (AVPicture*)&capture->rgb_picture, PIX_FMT_BGR24,
-                 (AVPicture*)capture->picture,
-                 capture->video_st->codec->pix_fmt,
-                 capture->video_st->codec->width,
-                 capture->video_st->codec->height );
-#else
-    img_convert( (AVPicture*)&capture->rgb_picture, PIX_FMT_BGR24,
-                 (AVPicture*)capture->picture,
-                 capture->video_st->codec.pix_fmt,
-                 capture->video_st->codec.width,
-                 capture->video_st->codec.height );
-#endif
+    sws_scale(capture->sws_context, capture->picture->data,
+	      capture->picture->linesize, 0,
+	      capture->video_st->codec->height,
+	      capture->rgb_picture.data, capture->rgb_picture.linesize);
     return &capture->frame;
 }
 
@@ -373,6 +384,7 @@
     AVFrame         * picture;
     AVFrame         * rgb_picture;
     uint8_t         * picbuf;
+    SwsContext      * sws_context;
 	AVStream        * video_st;
 } CvAVI_FFMPEG_Writer;
 
@@ -389,6 +401,7 @@
 	picture = avcodec_alloc_frame();
 	if (!picture)
 		return NULL;
+
 	size = avpicture_get_size(pix_fmt, width, height);
 	if(alloc){
 		picture_buf = (uint8_t *) cvAlloc(size);
@@ -530,7 +543,7 @@
 	}
 
 	// alloc memory for context 
-	writer->oc = av_alloc_format_context();
+	writer->oc = avformat_alloc_context();
 	assert (writer->oc);
 
 	/* set file name */
@@ -590,6 +603,7 @@
 	bool need_color_convert;
         need_color_convert = c->pix_fmt != PIX_FMT_BGR24;
 
+    writer->sws_context = NULL;
     /* allocate the encoded raw picture */
     writer->picture = icv_alloc_picture_FFMPEG(c->pix_fmt, c->width, c->height, need_color_convert);
     if (!writer->picture) {
@@ -713,10 +727,23 @@
 				PIX_FMT_BGR24, image->width, image->height);
 
 		// convert to the color format needed by the codec
-		if( img_convert((AVPicture *)mywriter->picture, c->pix_fmt,
-					(AVPicture *)mywriter->rgb_picture, PIX_FMT_BGR24, 
-					image->width, image->height) < 0){
-			CV_ERROR(CV_StsUnsupportedFormat, "FFMPEG::img_convert pixel format conversion from BGR24 not handled");
+	        mywriter->sws_context = sws_getCachedContext(mywriter->sws_context,
+							     image->width,
+							     image->height,
+							     PIX_FMT_BGR24,
+							     c->width,
+							     c->height,
+							     c->pix_fmt,
+							     SWS_BICUBIC,
+							     NULL, NULL, NULL);
+	        if (!mywriter->sws_context) {
+		   CV_ERROR(CV_StsNoMem, "Could not allocate scaling context");
+		}
+		if ( sws_scale(mywriter->sws_context, mywriter->rgb_picture->data,
+			       mywriter->rgb_picture->linesize, 0,
+			       image->height,
+			       mywriter->picture->data, mywriter->picture->linesize) < 0 ) {
+			CV_ERROR(CV_StsUnsupportedFormat, "sws_scale pixel format conversion from BGR24 not handled");
 		}
 	}
 	else{
@@ -738,7 +765,7 @@
 	// nothing to do if already released
 	if ( !(*writer) )
 		return;
-	
+
 	// release data structures in reverse order
 	CvAVI_FFMPEG_Writer * mywriter = (CvAVI_FFMPEG_Writer*)(*writer);
 
@@ -759,7 +786,7 @@
 		cvFree(&(mywriter->picture->data[0]));
 	}
 	av_free(mywriter->picture);
-
+	sws_freeContext(mywriter->sws_context);
     if (mywriter->rgb_picture) {
         av_free(mywriter->rgb_picture);
     }
