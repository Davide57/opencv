Index: opencv-0.9.7/otherlibs/highgui/cvcap.cpp
===================================================================
--- opencv-0.9.7.orig/otherlibs/highgui/cvcap.cpp	2005-07-26 15:14:23.000000000 +0200
+++ opencv-0.9.7/otherlibs/highgui/cvcap.cpp	2006-05-14 05:24:23.000000000 +0200
@@ -1199,7 +1199,7 @@
 
     if( capture->video_st )
     {
-        avcodec_close( &capture->video_st->codec );
+        avcodec_close( capture->video_st->codec );
     capture->video_st = NULL;
     }
 
@@ -1239,7 +1239,7 @@
     goto exit_func;
     }
     for(i = 0; i < ic->nb_streams; i++) {
-        AVCodecContext *enc = &ic->streams[i]->codec;
+        AVCodecContext *enc = ic->streams[i]->codec;
         AVCodec *codec;
     if( CODEC_TYPE_VIDEO == enc->codec_type && video_index < 0) {
         video_index = i;
@@ -1291,7 +1291,7 @@
     if(ret < 0)
         goto the_end;
 
-    len1 = avcodec_decode_video(&capture->video_st->codec, 
+    len1 = avcodec_decode_video(capture->video_st->codec, 
                     capture->picture, &got_picture, 
                     pkt->data, pkt->size);
     if (got_picture) {
@@ -1312,8 +1312,8 @@
     if( !capture || !capture->video_st || !capture->picture->data[0] )
     return 0;
     img_convert( (AVPicture*)&capture->rgb_picture, PIX_FMT_BGR24,
-         (AVPicture*)capture->picture, capture->video_st->codec.pix_fmt,
-         capture->video_st->codec.width, capture->video_st->codec.height );
+         (AVPicture*)capture->picture, capture->video_st->codec->pix_fmt,
+         capture->video_st->codec->width, capture->video_st->codec->height );
     return &capture->frame;
 }
 
@@ -1349,12 +1349,12 @@
     case CV_CAP_PROP_FRAME_HEIGHT:
         return capture->frame.height;
     break;
     case CV_CAP_PROP_FPS:
-        return (double)capture->video_st->codec.frame_rate
-        / (double)capture->video_st->codec.frame_rate_base;
+        return (double)capture->video_st->time_base.num
+        / (double)capture->video_st->time_base.den;
     break;
     case CV_CAP_PROP_FOURCC:
-        return (double)capture->video_st->codec.codec_tag;
+        return (double)capture->video_st->codec->codec_tag;
     break;
     }
     return 0;
@@ -1601,8 +1603,8 @@
     writer->context->bit_rate         = 400000;      // TODO: BITRATE SETTINGS!
     writer->context->width            = frameSize.width;  
     writer->context->height           = frameSize.height;
-    writer->context->frame_rate       = static_cast<int> (fps);
-    writer->context->frame_rate_base  =  1;
+    writer->context->time_base.num    = static_cast<int> (fps * 36000);
+    writer->context->time_base.den    =  36000;
     writer->context->gop_size         = 10;
     writer->context->max_b_frames     =  0;          // TODO: WHAT TO DO WITH B-FRAMES IN OTHER CODECS?
     
