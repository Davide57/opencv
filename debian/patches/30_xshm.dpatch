#! /bin/sh -e
## 30_xshm.dpatch by  <sam+deb@zoy.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: No description.

if [ $# -lt 1 ]; then
    echo "`basename $0`: script expects -patch|-unpatch as argument" >&2
    exit 1
fi

[ -f debian/patches/00patch-opts ] && . debian/patches/00patch-opts
patch_opts="${patch_opts:--f --no-backup-if-mismatch} ${2:+-d $2}"

case "$1" in
    -patch) patch -p1 ${patch_opts} < $0;;
    -unpatch) patch -R -p1 ${patch_opts} < $0;;
    *)
        echo "`basename $0`: script expects -patch|-unpatch as argument" >&2
        exit 1;;
esac

exit 0

@DPATCH@
diff -urNad /home/sam/debian/official/opencv/OpenCV-0.9.5/otherlibs/cvcam/src/unix/render.cpp OpenCV-0.9.5/otherlibs/cvcam/src/unix/render.cpp
--- /home/sam/debian/official/opencv/OpenCV-0.9.5/otherlibs/cvcam/src/unix/render.cpp	2004-08-18 18:55:30.000000000 +0200
+++ OpenCV-0.9.5/otherlibs/cvcam/src/unix/render.cpp	2004-08-18 18:55:54.000000000 +0200
@@ -58,6 +58,7 @@
         assert(exp);                                                \
     }
 
+
 static void icvvResizeImage( int src_w, int src_h, int src_s, char* src,
                              int dst_w, int dst_h, int dst_s, char* dst,
                              int depth )
@@ -187,7 +188,7 @@
     time_t start, now;
     int frames = 0;
     float rate = 0;
-    Status XShm;
+    bool XShm;
     uchar* imgdata = NULL;
     uchar* tmpbuff = NULL;
 
@@ -230,7 +231,7 @@
 
     pixelsize = icvVideoWindowPixelsize(windowdepth);
 
-    XShm = XShmQueryExtension(display);
+    XShm = icvHasShm(display);
     if(XShm)
     {
         image = XShmCreateImage(display, visual, windowdepth, ZPixmap, NULL,
diff -urNad /home/sam/debian/official/opencv/OpenCV-0.9.5/otherlibs/cvcam/src/unix/render.h OpenCV-0.9.5/otherlibs/cvcam/src/unix/render.h
--- /home/sam/debian/official/opencv/OpenCV-0.9.5/otherlibs/cvcam/src/unix/render.h	2004-08-18 18:55:24.000000000 +0200
+++ OpenCV-0.9.5/otherlibs/cvcam/src/unix/render.h	2004-08-18 18:55:31.000000000 +0200
@@ -67,6 +67,9 @@
 /*depth in bits, returns pixelsize in bytes*/ 
 int icvVideoWindowPixelsize(int depth);
 
+/*MIT-SHM support detection*/
+int icvHasShm(Display *display);
+
 #ifdef __cplusplus
 }
 #endif
diff -urNad /home/sam/debian/official/opencv/OpenCV-0.9.5/otherlibs/highgui/window_lnx.cpp OpenCV-0.9.5/otherlibs/highgui/window_lnx.cpp
--- /home/sam/debian/official/opencv/OpenCV-0.9.5/otherlibs/highgui/window_lnx.cpp	2004-08-18 18:55:30.000000000 +0200
+++ OpenCV-0.9.5/otherlibs/highgui/window_lnx.cpp	2004-08-18 18:55:31.000000000 +0200
@@ -129,6 +129,62 @@
 
 static CvWindow* hg_windows = 0;
 
+static bool shm_support;
+
+static int shm_error_handler( Display *display, XErrorEvent *error )
+{
+    shm_support = false;
+    return 0;
+}
+
+HIGHGUI_IMPL int icvHasShm( Display *display )
+{
+    XShmSegmentInfo shminfo;
+    int ret = 1;
+    int major, minor;
+    Bool pixmaps;
+
+    if( !XShmQueryVersion(display, &major, &minor, &pixmaps)
+         || (major < 1 || (major == 1 && minor < 1)))
+        return 0;
+
+    shminfo.shmid = shmget( IPC_PRIVATE, 1, IPC_CREAT | 0777 );
+    if(shminfo.shmid == -1 )
+        return 0;
+
+    shminfo.shmaddr = (char *)shmat( shminfo.shmid, 0, 0 );
+    if( shminfo.shmaddr == (char *)-1 )
+    {
+        shmctl( shminfo.shmid, IPC_RMID, 0 );
+        return 0;
+    }
+
+    XSync( display, False );
+    XSetErrorHandler( shm_error_handler );
+
+    shm_support = true;
+
+    shminfo.readOnly = True;
+    if( !XShmAttach( display, &shminfo ) )
+    {
+        shmdt( shminfo.shmaddr );
+        shmctl( shminfo.shmid, IPC_RMID, 0 );
+        return 0;
+    }
+
+    XSync( display, False );
+    XSetErrorHandler( NULL );
+    
+    if( shm_support )
+        XShmDetach( display, &shminfo );
+    else
+        ret = 0;
+
+    shmdt( shminfo.shmaddr );
+    shmctl( shminfo.shmid, IPC_RMID, 0 );
+    return ret;
+}
+
 
 HIGHGUI_IMPL int cvInitSystem( int argc, char** argv )
 {
@@ -245,8 +301,11 @@
         hg_windows->prev = window;
     hg_windows = window;
     
-    window->xshmseg = (XShmSegmentInfo*)cvAlloc(sizeof(XShmSegmentInfo));
-    memset( window->xshmseg, 0, sizeof(*window->xshmseg) );
+    if( icvHasShm(XtDisplay(window->area)) )
+    {
+        window->xshmseg = (XShmSegmentInfo*)cvAlloc(sizeof(XShmSegmentInfo));
+        memset( window->xshmseg, 0, sizeof(*window->xshmseg) );
+    }
     
     XtPopup(window->frame, XtGrabNone);
     /*XMapRaised( XtDisplay(window->frame), window->frame );*/
@@ -283,10 +342,14 @@
         cvFree( (void**)&image->data );
         XDestroyImage( image );*/
 
-        XShmDetach( XtDisplay(window->area), window->xshmseg );
+        if( window->xshmseg )
+            XShmDetach( XtDisplay(window->area), window->xshmseg );
         XDestroyImage( window->dst_image );
-        shmdt( window->xshmseg->shmaddr );
-        shmctl( window->xshmseg->shmid, IPC_RMID, NULL );        
+        if( window->xshmseg )
+        {
+            shmdt( window->xshmseg->shmaddr );
+            shmctl( window->xshmseg->shmid, IPC_RMID, NULL );        
+        }
         window->dst_image = 0;
     }
 
@@ -303,7 +366,8 @@
     }
     
 
-    cvFree( (void**)&window->xshmseg ); 
+    if( window->xshmseg )
+        cvFree( (void**)&window->xshmseg ); 
     cvFree( (void**)&window );
 }
 
@@ -672,7 +736,6 @@
     return window_name;
 }
 
-
 /* draw image to frame */
 static void icvPutImage( CvWindow* window )
 {
@@ -698,10 +761,14 @@
         window->dst_image->height < height) )
     {
         /*cvFree( (void**)&window->dst_image->data );*/
-        XShmDetach( XtDisplay(window->area), window->xshmseg );
+        if( window->xshmseg )
+            XShmDetach( XtDisplay(window->area), window->xshmseg );
         XDestroyImage( window->dst_image );
-        shmdt( window->xshmseg->shmaddr );
-        shmctl( window->xshmseg->shmid, IPC_RMID, NULL );
+        if( window->xshmseg )
+        {
+            shmdt( window->xshmseg->shmaddr );
+            shmctl( window->xshmseg->shmid, IPC_RMID, NULL );
+        }
         window->dst_image = 0;
     }
 
@@ -722,18 +789,31 @@
         Display* display = XtDisplay(window->frame);
         Visual* visual = DefaultVisualOfScreen(DefaultScreenOfDisplay(display));
         int depth = DefaultDepth(display, 0);
-        window->dst_image = XShmCreateImage( display, visual, depth, ZPixmap,
-                                             NULL, window->xshmseg,
-                                             new_width, new_height );
-        window->xshmseg->shmid = shmget(IPC_PRIVATE,
-                                        window->dst_image->height*
-                                        window->dst_image->bytes_per_line,
-                                        IPC_CREAT|0777);
-        assert( window->xshmseg != 0 && window->xshmseg->shmid != -1);
-        window->xshmseg->shmaddr = window->dst_image->data =
-                (char*)shmat(window->xshmseg->shmid, 0, 0) ;
-        window->xshmseg->readOnly = False;
-        XShmAttach( display, window->xshmseg );
+        if( window->xshmseg )
+        {
+            window->dst_image = XShmCreateImage( display, visual, depth,
+                                                 ZPixmap, NULL, window->xshmseg,
+                                                 new_width, new_height );
+            window->xshmseg->shmid = shmget(IPC_PRIVATE,
+                                            window->dst_image->height*
+                                            window->dst_image->bytes_per_line,
+                                            IPC_CREAT|0777);
+            assert( window->xshmseg != 0 && window->xshmseg->shmid != -1);
+            window->xshmseg->shmaddr = window->dst_image->data =
+                    (char*)shmat(window->xshmseg->shmid, 0, 0) ;
+            window->xshmseg->readOnly = False;
+            XShmAttach( display, window->xshmseg );
+        }
+
+        if( !shm_support )
+        {
+            window->dst_image = XCreateImage( display, visual, depth, ZPixmap,
+                                              0, NULL, new_width, new_height,
+                                              8, 0 );
+            window->dst_image->data =
+                        (char *)malloc( window->dst_image->bytes_per_line
+                                         * window->dst_image->height );
+        }
     }
     
     {
